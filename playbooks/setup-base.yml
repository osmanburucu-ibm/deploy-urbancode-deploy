---
# TODO: how to use base_download_online here...
- name: Setup base os requirements
  hosts: all
  become: true
  vars_files:
    - group_vars/all.yml
    - group_vars/ucd_server.yml
    - group_vars/db_server.yml
  tasks:
  - name: Install buildtools
    ansible.builtin.include_role:
      name: robertdebock.buildtools
  - name: Install Java
    ansible.builtin.include_role:
      name: robertdebock.java
    vars:
      java_vendor: "{{ base_java_vendor }}"
      java_type: "{{ base_java_type }}"
      java_version: "{{ base_java_version }}"
    when: base_java_install

  - name: Create user
    ansible.builtin.user:
      name: "{{ item }}"
      append: true
      generate_ssh_key: true
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa
      password: "$6$rounds=656000$JcUb6pek3F0me/bz$KzFusdyEugz96MOdXV924gNLnXVj0vlt5qfwYDn3i2LgJKHH4fMUpQGbkIqGqxIacNPduiCQJVZU7ApHuHuVx0"
      update_password: on_create
    loop: "{{ add_user }}"

  - name: Install Docker
    ansible.builtin.include_role:
      name: geerlingguy.docker
    vars:
      docker_users: "{{ add_user }}"
      docker_edition: 'ce'
      docker_package_state: present
      docker_install_compose: true
    when: base_docker_install

  - name: Set os specific variable of packagename
    ansible.builtin.include_vars:
      file: "{{ item }}"
    with_first_found:
      - 'vars/{{ ansible_distribution }}.yml'
      - 'vars/{{ ansible_os_family }}.yml'

  - name: Verify that prereqs are installed
    ansible.builtin.package:
        name: "{{ required_os_packages }}"
        state: present

- name: Setup DB Server requirements
  hosts: db_server
  become: true
  pre_tasks:
  - name: Set os specific variable of packagename
    ansible.builtin.include_vars:
      file: "{{ item }}"
    with_first_found:
      - 'vars/{{ ansible_distribution }}.yml'
      - 'vars/{{ ansible_os_family }}.yml'
  - name: Set variables
    ansible.builtin.include_vars:
      file: "{{ item }}"
    with_items:
      - 'group_vars/db_server.yml'
      - 'group_vars/all.yml'

  roles:
    - role: geerlingguy.mysql
      mysql_databases:
        - name: "{{ ucdserver_dbname }}"
          encoding: utf8
          collation: utf8_bin
      mysql_users:
        - name: "{{ ucdserver_dbuser }}"
          password: "{{ ucdserver_upassword }}"
          host: "localhost"

  post_tasks:
  - name: Add grant to  UCD DB User
    community.mysql.mysql_user:
      name: "{{ ucdserver_dbuser }}"
      append_privs: true
      priv: "{{ ucdserver_dbname }}.*:ALL,GRANT"
      host: "%"
      state: present
